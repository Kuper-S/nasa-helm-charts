apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nasa-flask-app.fullname" . }}
  labels:
    {{- include "nasa-flask-app.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "nasa-flask-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        prometheus.io/scrape: "true"   # Enable scraping
        prometheus.io/path: "/metrics" # Path to the metrics endpoint
        prometheus.io/port: "5000"     # Port where the app is running
        prometheus.io/scheme: "http"   # If you're not using HTTPS
      labels:
        {{- include "nasa-flask-app.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nasa-flask-app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 5000   # The Flask app listens on port 5000
              protocol: TCP
          env:
          # MongoDB credentials from Kubernetes secrets
          - name: MONGO_USER
            valueFrom:
              secretKeyRef:
                name: mongodb-secret
                key: mongo-username
          - name: MONGO_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mongodb-secret
                key: mongo-password
         
          - name: MONGO_URI
            value: "mongodb://$(MONGO_USER):$(MONGO_PASSWORD)@mongodb.db.svc.cluster.local:27017/nasa_db?authSource=nasa_db"

          # Kafka credentials from Kubernetes secrets
          - name: KAFKA_BOOTSTRAP_SERVERS
            value: "kafka.messaging.svc.cluster.local:9092"
          - name: KAFKA_SASL_USERNAME
            valueFrom:
              secretKeyRef:
                name: kafka-secret
                key: kafka-username
          - name: KAFKA_SASL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: kafka-secret
                key: kafka-password

                  
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

